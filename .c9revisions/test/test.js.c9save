{"ts":1361508395343,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1361748227821,"patch":[[{"diffs":[[1,"test(\"Test basic stack and push with call\", function() {\r\n    function a(val) {\r\n        return \"a\" + val;\r\n    }\r\n    function b(val) {\r\n        return \"b\" + val;\r\n    }\r\n    function c(val) {\r\n        return \"c\" + val;\r\n    }\r\n    expect(6);\r\n    ok(Stack(a).call(1) === \"a1\");\r\n    ok(Stack(a).push(b).call(1) === \"ab1\");\r\n    ok(Stack(a).push(b).push(c).call(1) === \"abc1\");\r\n    ok(Stack([a,b,c]).call(1) === \"abc1\");\r\n});\r\n\r\n/*\r\nfunction flatten() {\r\n    var args = Array.prototype.slice.call(arguments, 0);\r\n\treturn args.reduce(function(a, b) {\r\n\t\treturn a.concat(b);\r\n\t});\r\n}\r\n\r\nfunction doubleAll() {\r\n\tvar args = Array.prototype.slice.call(arguments, 0);\r\n\treturn args.map(function(a) {\r\n\t\treturn a + a;\r\n\t});\r\n}\r\n\r\nfunction sum() {\r\n    var args = Array.prototype.slice.call(arguments, 0);\r\n    return args.reduce(function(a, b) {\r\n        return a + b;\r\n    });\r\n}\r\n\r\nStack([sum, doubleAll, flatten]).apply([[1],[2],[3]]);\r\n*/\r\n"]],"start1":0,"start2":0,"length1":0,"length2":940}]],"length":940,"saved":false}
{"ts":1361748645010,"patch":[[{"diffs":[[0,"ect("],[-1,"6"],[1,"4"],[0,");\r\n"]],"start1":236,"start2":236,"length1":9,"length2":9}]],"length":940,"saved":false}
{"ts":1361748725437,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"/*\r\n"],[1,"test(\"Test basic stack and push with call\", function() {\r\n    "],[0,"func"]],"start1":427,"start2":427,"length1":12,"length2":70},{"diffs":[[0,"latten() {\r\n    "],[1," "],[1,"   "],[0,"var args = Array"]],"start1":503,"start2":503,"length1":32,"length2":36},{"diffs":[[0,"arguments, 0);\r\n"],[1,"    "],[0,"\treturn args.red"]],"start1":561,"start2":561,"length1":32,"length2":36},{"diffs":[[0,"on(a, b) {\r\n"],[1,"    "],[0,"\t\treturn a.c"]],"start1":607,"start2":607,"length1":24,"length2":28},{"diffs":[[0,"at(b);\r\n"],[1,"    "],[0,"\t});\r\n"],[-1,"}\r\n\r\n"],[1,"    }\r\n    "],[0,"function"]],"start1":638,"start2":638,"length1":27,"length2":37},{"diffs":[[0,"ll() {\r\n"],[1,"    "],[0,"\tvar arg"]],"start1":683,"start2":683,"length1":16,"length2":20},{"diffs":[[0,"s, 0);\r\n"],[1,"    "],[0,"\treturn "]],"start1":742,"start2":742,"length1":16,"length2":20},{"diffs":[[0,"n(a) {\r\n"],[1,"    "],[0,"\t\treturn"]],"start1":778,"start2":778,"length1":16,"length2":20},{"diffs":[[0,"a;\r\n"],[1,"    "],[0,"\t});\r\n"],[-1,"}\r\n\r\n"],[1,"    }\r\n    "],[0,"func"]],"start1":803,"start2":803,"length1":19,"length2":29},{"diffs":[[0,"um() {\r\n    "],[1,"  "],[1,"  "],[0,"var args = A"]],"start1":838,"start2":838,"length1":24,"length2":28},{"diffs":[[0,"ments, 0);\r\n"],[1,"    "],[0,"    return a"]],"start1":896,"start2":896,"length1":24,"length2":28},{"diffs":[[0,"on(a, b) {\r\n"],[1,"    "],[0,"        retu"]],"start1":941,"start2":941,"length1":24,"length2":28},{"diffs":[[0,"a + b;\r\n"],[1,"    "],[0,"    });\r"]],"start1":972,"start2":972,"length1":16,"length2":20},{"diffs":[[0,");\r\n"],[-1,"}\r\n\r\n"],[1,"    }\r\n    expect(1);\r\n    ok("],[0,"Stac"]],"start1":989,"start2":989,"length1":13,"length2":38},{"diffs":[[0,"3]])"],[-1,";\r\n*/"],[1," === 12);\r\n});"],[0,"\r\n"]],"start1":1072,"start2":1072,"length1":11,"length2":20}]],"length":1092,"saved":false}
{"ts":1361748742264,"patch":[[{"diffs":[[0,"k and push with "],[-1,"call"],[1,"apply"],[0,"\", function() {\r"]],"start1":452,"start2":452,"length1":36,"length2":37}]],"length":1093,"saved":false}
{"ts":1361748787816,"patch":[[{"diffs":[[0,"expect(1);\r\n"],[1,"    ok(Stack(flatten).apply([[1],[2],[3]]) === [1,2,3]);\r\n"],[0,"    ok(Stack"]],"start1":1005,"start2":1005,"length1":24,"length2":82}]],"length":1151,"saved":false}
{"ts":1361748794971,"patch":[[{"diffs":[[0," expect("],[-1,"1"],[1,"2"],[0,");\r\n    "]],"start1":1004,"start2":1004,"length1":17,"length2":17}]],"length":1151,"saved":false}
